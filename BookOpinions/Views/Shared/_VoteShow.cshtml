@model ICollection<BookOpinions.Models.EntityModels.Rating>

@{
    Single m_Average = 0;
    Single m_totalVote = 0;
    Single m_inPercent = 0;
    var thisVote = string.Empty;

    if (Model.Count > 0)
    {
        @foreach (var rate in Model)
        {
            m_totalVote += rate.Rate;
        }

        m_Average = m_totalVote / Model.Count;
        m_inPercent = (m_Average * 100) / 5;

        thisVote = "<span style=\"display: block; width: 65px; height: 13px; background: url(/images/starRating.png) 0 0;\">" +
            "<span style=\"display: block; width: " + m_inPercent + "%; height: 13px; background: url(/images/starRating.png) 0 -13px;\"></span> " +
            "</span>" +
            "<span class=\"smallText\">Overall ratings: <span itemprop=\"ratingCount\">" + Model.Count + "</span> | Rating: <span itemprop=\"ratingValue\">" + m_Average.ToString("##.##") + "</span> out of 5 </span>  ";
    }
}
<div itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
    <meta itemprop="bestRating" content="5" />
    <meta itemprop="worstRating" content="1">
    <meta itemprop="ratingValue" content="@m_Average.ToString("##.##") %>" />
    @Html.Raw(thisVote)
</div>
